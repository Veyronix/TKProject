{"remainingRequest":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/EditorView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/EditorView.vue","mtime":1590002770607},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport service from '@/rest/service'\nexport default {\n  name: 'EditorView',\n  data () {\n    return {\n      name: '',\n      files: null,\n      uploading: false,\n      newFormat: 'Avi',\n      showInfo: false,\n      hflip: false,\n      vflip: false,\n      from: null,\n      to: null,\n      text_to_add: null,\n      font_colors: ['red', 'black', 'white', 'blue'],\n      selected_font_color: 'white',\n      selected_position: 'Top left',\n      button_is_enabled: false,\n      text_position: [\n        'Top left',\n        'Top right',\n        'Bottom left',\n        'Bottom right',\n      ],\n      rules: {\n        from: value => !isNaN(value),\n        to: value => (!isNaN(value) && ((parseInt(this.to) > parseInt(this.from)))) || value === undefined || value === '' || 'From have to be bigger than to',\n      },\n    }\n  },\n  computed: {\n    formData () {\n      const data = new FormData()\n      const file = this.files[0]\n      data.append('data', file, file.name)\n      return data\n    },\n  },\n  methods: {\n    importVideo () {\n      console.log(this.files)\n      const filename = this.files[0].name\n      const that = this\n      this.uploading = true\n      service.editVideo(this.formData, this.getOperations())\n        .then(response => {\n          console.log('edit response')\n          console.log(response)\n          service.downloadRec(response.data.uuid, filename, function () {\n            that.uploading = false\n          })\n        })\n        .catch(error => {\n          that.uploading = false\n          console.log(error)\n        })\n    },\n    getOperations () {\n      let operations = ''\n      if (this.hflip) {\n        operations += 'hflip,'\n      }\n      if (this.vflip) {\n        operations += 'vflip,'\n      }\n      if (this.from) {\n        operations += 'trim_from,' + this.from + ','\n      }\n      if (this.to) {\n        operations += 'trim_to,' + this.to + ','\n      }\n      if (this.text_to_add) {\n        operations += 'text_to_add,' + this.text_to_add + ','\n        operations += 'text_position,' + this.selected_position + ','\n        operations += 'font_color,' + this.selected_font_color + ','\n      }\n      console.log(operations)\n      return operations\n    },\n    validate_button () {\n      this.button_is_enabled = (!!this.files && this.files.length === 1) && (this.vflip || this.hflip || !!this.from || !!this.to || !!this.text_to_add)\n      return true\n    },\n  },\n}\n",{"version":3,"sources":["EditorView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditorView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-card-text>\n    <v-card-title>\n      Editor\n    </v-card-title>\n    <v-file-input\n      v-model=\"files\"\n      accept=\".avi,.mp4\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Choose video file\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      :rules=\"[validate_button]\"\n    />\n    <v-divider class=\"mx-4 mb-4\" />\n    <v-row>\n      <p class=\"text-left\">\n        Flip video\n      </p>\n    </v-row>\n    <v-row justify=\"space-around\">\n      <v-checkbox\n        v-model=\"hflip\"\n        class=\"mx-2\"\n        label=\"Horizontal Flip\"\n        :rules=\"[validate_button]\"\n      />\n      <v-checkbox\n        v-model=\"vflip\"\n        class=\"mx-2\"\n        label=\"Vertical Flip\"\n        :rules=\"[validate_button]\"\n      />\n    </v-row>\n    <v-divider class=\"mx-4 mb-4\" />\n    <v-row>\n      <p class=\"text-left\">\n        Cut video\n      </p>\n    </v-row>\n    <v-row justify=\"space-around\">\n      <v-col\n        cols=\"12\"\n        sm=\"4\"\n      >\n        <v-text-field\n          v-model=\"from\"\n          :rules=\"[rules.from]\"\n          label=\"From Frame\"\n          single-line\n          outlined\n          clearable\n          hint=\"From Frame\"\n          @input=\"validate_button()\"\n        />\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"4\"\n      >\n        <v-text-field\n          v-model=\"to\"\n          :rules=\"[rules.to]\"\n          label=\"To Frame\"\n          single-line\n          outlined\n          clearable\n          hint=\"To Frame\"\n          @input=\"validate_button()\"\n        />\n      </v-col>\n    </v-row>\n    <v-divider class=\"mx-4 mb-4\" />\n    <v-row>\n      <p class=\"text-left\">\n        Add text\n      </p>\n    </v-row>\n    <v-row justify=\"space-around\">\n      <v-col\n        cols=\"10\"\n        sm=\"3\"\n      >\n        <v-text-field\n          v-model=\"text_to_add\"\n          label=\"Text to add\"\n          single-line\n          outlined\n          clearable\n          hint=\"Text to add\"\n          @input=\"validate_button()\"\n        />\n      </v-col>\n      <v-col\n        cols=\"10\"\n        sm=\"3\"\n      >\n        <v-autocomplete\n          v-model=\"selected_position\"\n          :items=\"text_position\"\n          label=\"Select text position\"\n          outlined\n        />\n      </v-col>\n      <v-col\n        cols=\"10\"\n        sm=\"3\"\n      >\n        <v-autocomplete\n          v-model=\"selected_font_color\"\n          :items=\"font_colors\"\n          label=\"Select font color\"\n          outlined\n        />\n      </v-col>\n    </v-row>\n    <v-btn\n      big\n      color=\"primary\"\n      :loading=\"uploading\"\n      :disabled=\"!button_is_enabled\"\n      @click=\"importVideo\"\n    >\n      Convert video\n    </v-btn>\n  </v-card-text>\n</template>\n\n<script>\n  import service from '@/rest/service'\n  export default {\n    name: 'EditorView',\n    data () {\n      return {\n        name: '',\n        files: null,\n        uploading: false,\n        newFormat: 'Avi',\n        showInfo: false,\n        hflip: false,\n        vflip: false,\n        from: null,\n        to: null,\n        text_to_add: null,\n        font_colors: ['red', 'black', 'white', 'blue'],\n        selected_font_color: 'white',\n        selected_position: 'Top left',\n        button_is_enabled: false,\n        text_position: [\n          'Top left',\n          'Top right',\n          'Bottom left',\n          'Bottom right',\n        ],\n        rules: {\n          from: value => !isNaN(value),\n          to: value => (!isNaN(value) && ((parseInt(this.to) > parseInt(this.from)))) || value === undefined || value === '' || 'From have to be bigger than to',\n        },\n      }\n    },\n    computed: {\n      formData () {\n        const data = new FormData()\n        const file = this.files[0]\n        data.append('data', file, file.name)\n        return data\n      },\n    },\n    methods: {\n      importVideo () {\n        console.log(this.files)\n        const filename = this.files[0].name\n        const that = this\n        this.uploading = true\n        service.editVideo(this.formData, this.getOperations())\n          .then(response => {\n            console.log('edit response')\n            console.log(response)\n            service.downloadRec(response.data.uuid, filename, function () {\n              that.uploading = false\n            })\n          })\n          .catch(error => {\n            that.uploading = false\n            console.log(error)\n          })\n      },\n      getOperations () {\n        let operations = ''\n        if (this.hflip) {\n          operations += 'hflip,'\n        }\n        if (this.vflip) {\n          operations += 'vflip,'\n        }\n        if (this.from) {\n          operations += 'trim_from,' + this.from + ','\n        }\n        if (this.to) {\n          operations += 'trim_to,' + this.to + ','\n        }\n        if (this.text_to_add) {\n          operations += 'text_to_add,' + this.text_to_add + ','\n          operations += 'text_position,' + this.selected_position + ','\n          operations += 'font_color,' + this.selected_font_color + ','\n        }\n        console.log(operations)\n        return operations\n      },\n      validate_button () {\n        this.button_is_enabled = (!!this.files && this.files.length === 1) && (this.vflip || this.hflip || !!this.from || !!this.to || !!this.text_to_add)\n        return true\n      },\n    },\n  }\n</script>\n\n<style scoped>\n p {\n   font-size: 20px;\n   padding-left: 20px;\n }\n</style>\n"]}]}