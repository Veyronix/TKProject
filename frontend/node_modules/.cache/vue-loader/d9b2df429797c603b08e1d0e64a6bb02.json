{"remainingRequest":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/WatermarkView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/WatermarkView.vue","mtime":1591255506075},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport service from '@/rest/service'\nexport default {\n  name: 'ConverterView',\n  data () {\n    return {\n      name: '',\n      files: null,\n      alert: false,\n      image: null,\n      percent: 0,\n      uploading: false,\n      selected_op: '0.5',\n      op: Array(10).fill().map((_, idx) => (0.1 + idx / 10).toFixed(1)),\n      showInfo: false,\n      button_is_enabled: false,\n      selected_position: 'Top left',\n      text_position: [\n        'Top left',\n        'Top right',\n        'Bottom left',\n        'Bottom right',\n      ],\n    }\n  },\n  computed: {\n    formData () {\n      const data = new FormData()\n      const video = this.files[0]\n      const image = this.image[0]\n      data.append('image', image, image.name)\n      data.append('video', video, video.name)\n      return data\n    },\n  },\n  methods: {\n    importVideo () {\n      this.uploading = true\n      console.log(this.files)\n      const filename = this.files[0].name\n      const that = this\n      service.putWatermark(this.formData, this.getOperations())\n        .then(response => {\n          console.log('convert response')\n          console.log(response)\n          console.log(response.data.uuid)\n          service.downloadRec(response.data.uuid, filename, function (value) { that.percent = value }, function () {\n            if (that.percent !== 100) {\n              that.alert = true\n            }\n            that.uploading = false\n            that.percent = 0\n          })\n        })\n        .catch(error => {\n          that.uploading = false\n          that.percent = 0\n          that.alert = true\n          console.log(error)\n        })\n    },\n    getOperations () {\n      let operations = ''\n      operations += 'position,' + this.selected_position\n      operations += ','\n      operations += 'opacity,' + this.selected_op\n      console.log(operations)\n      return operations\n    },\n    validate_button () {\n      this.button_is_enabled = (!!this.files && this.files.length === 1) && (!!this.image && this.image.length === 1)\n    },\n  },\n}\n",{"version":3,"sources":["WatermarkView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WatermarkView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-card-text>\n    <v-card-title>\n      Choose video\n    </v-card-title>\n    <v-file-input\n      v-model=\"files\"\n      accept=\".avi,.mp4\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Choose video file\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      :rules=\"[validate_button]\"\n    />\n    <v-divider class=\"mx-4 mb-4\" />\n    <p class=\"text-left\">\n      Choose image\n    </p>\n    <v-file-input\n      v-model=\"image\"\n      accept=\"image/*\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Choose image file\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      :rules=\"[validate_button]\"\n    />\n    <v-divider class=\"mx-4 mb-4\" />\n    <p class=\"text-left\">\n      Watermark position\n    </p>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n      >\n        <v-autocomplete\n          v-model=\"selected_position\"\n          class=\"pl-8\"\n          :items=\"text_position\"\n          label=\"Select position\"\n          outlined\n        />\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n      >\n        <v-select\n          v-model=\"selected_op\"\n          :items=\"op\"\n          menu-props=\"auto\"\n          label=\"Select opacity\"\n          outlined\n        />\n      </v-col>\n    </v-row>\n    <v-alert\n      v-model=\"alert\"\n      type=\"error\"\n      dismissible\n    >\n      Error! Something went wrong. Try again.\n    </v-alert>\n    <v-btn\n      big\n      color=\"primary\"\n      :loading=\"uploading\"\n      :disabled=\"!button_is_enabled\"\n      @click=\"importVideo\"\n    >\n      Convert video\n    </v-btn>\n    <v-progress-linear\n      v-model=\"percent\"\n      class=\"mt-4\"\n      color=\"light-blue\"\n      height=\"30\"\n      :active=\"uploading\"\n      striped\n    />\n  </v-card-text>\n</template>\n\n<script>\n  import service from '@/rest/service'\n  export default {\n    name: 'ConverterView',\n    data () {\n      return {\n        name: '',\n        files: null,\n        alert: false,\n        image: null,\n        percent: 0,\n        uploading: false,\n        selected_op: '0.5',\n        op: Array(10).fill().map((_, idx) => (0.1 + idx / 10).toFixed(1)),\n        showInfo: false,\n        button_is_enabled: false,\n        selected_position: 'Top left',\n        text_position: [\n          'Top left',\n          'Top right',\n          'Bottom left',\n          'Bottom right',\n        ],\n      }\n    },\n    computed: {\n      formData () {\n        const data = new FormData()\n        const video = this.files[0]\n        const image = this.image[0]\n        data.append('image', image, image.name)\n        data.append('video', video, video.name)\n        return data\n      },\n    },\n    methods: {\n      importVideo () {\n        this.uploading = true\n        console.log(this.files)\n        const filename = this.files[0].name\n        const that = this\n        service.putWatermark(this.formData, this.getOperations())\n          .then(response => {\n            console.log('convert response')\n            console.log(response)\n            console.log(response.data.uuid)\n            service.downloadRec(response.data.uuid, filename, function (value) { that.percent = value }, function () {\n              if (that.percent !== 100) {\n                that.alert = true\n              }\n              that.uploading = false\n              that.percent = 0\n            })\n          })\n          .catch(error => {\n            that.uploading = false\n            that.percent = 0\n            that.alert = true\n            console.log(error)\n          })\n      },\n      getOperations () {\n        let operations = ''\n        operations += 'position,' + this.selected_position\n        operations += ','\n        operations += 'opacity,' + this.selected_op\n        console.log(operations)\n        return operations\n      },\n      validate_button () {\n        this.button_is_enabled = (!!this.files && this.files.length === 1) && (!!this.image && this.image.length === 1)\n      },\n    },\n  }\n</script>\n\n<style scoped>\n    p {\n        font-size: 20px;\n        padding-left: 20px;\n    }\n</style>\n"]}]}