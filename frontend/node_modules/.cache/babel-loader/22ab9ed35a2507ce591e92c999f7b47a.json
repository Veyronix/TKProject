{"remainingRequest":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/rest/service.js","dependencies":[{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/rest/service.js","mtime":1590945772586},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import client from \"./common\";\nimport { saveAs } from 'file-saver';\nexport default {\n  convertVideo: function convertVideo(newFormat, file) {\n    return client.post(\"/convertVideo/\".concat(newFormat), file, {});\n  },\n  editVideo: function editVideo(file, operations) {\n    return client.post(\"/editVideo/\".concat(operations), file, {});\n  },\n  putWatermark: function putWatermark(files, operations) {\n    return client.post(\"/putWatermark/\".concat(operations), files, {});\n  },\n  downloadRec: function downloadRec(userUUID, filename, percent, callback) {\n    var recFun = function recFun() {\n      setTimeout(function () {\n        client.post(\"/status/\".concat(userUUID), null).then(function (response) {\n          if (response.data === 100) {\n            console.log('found');\n            console.log(response);\n            percent(response.data);\n            downloadFun();\n          } else {\n            console.log('not found');\n            console.log(response);\n            console.log(response.data);\n            percent(response.data);\n            recFun();\n          }\n        }).catch(function (error) {\n          console.log(error);\n          console.log('ups');\n          callback();\n        });\n      }, 1000);\n    };\n\n    var downloadFun = function downloadFun() {\n      client.post(\"/downloadVideo/\".concat(userUUID), null, {\n        responseType: 'blob'\n      }).then(function (response) {\n        if (response.data.type === 'text/html') {\n          console.log('not found');\n          console.log('nie dziala');\n          callback();\n        } else {\n          console.log('found');\n          console.log(response);\n          console.log(response.data);\n          var file = new File([response.data], filename);\n          saveAs(file);\n          callback();\n        }\n      }).catch(function (error) {\n        console.log(error);\n        callback();\n      });\n    };\n\n    recFun();\n  }\n};",{"version":3,"sources":["/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/rest/service.js"],"names":["client","saveAs","convertVideo","newFormat","file","post","editVideo","operations","putWatermark","files","downloadRec","userUUID","filename","percent","callback","recFun","setTimeout","then","response","data","console","log","downloadFun","catch","error","responseType","type","File"],"mappings":"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","sourcesContent":["import client from './common'\nimport { saveAs } from 'file-saver'\n\nexport default {\n    convertVideo (newFormat, file) {\n        return client.post(`/convertVideo/${newFormat}`, file, {})\n    },\n    editVideo (file, operations) {\n        return client.post(`/editVideo/${operations}`, file, {})\n    },\n    putWatermark (files, operations) {\n        return client.post(`/putWatermark/${operations}`, files, {})\n    },\n    downloadRec (userUUID, filename, percent, callback) {\n        const recFun = function () {\n            setTimeout(function () {\n                client.post(`/status/${userUUID}`, null)\n                    .then(response => {\n                        if (response.data === 100) {\n                            console.log('found')\n                            console.log(response)\n                            percent(response.data)\n                            downloadFun()\n                        } else {\n                            console.log('not found')\n                            console.log(response)\n                            console.log(response.data)\n                            percent(response.data)\n                            recFun()\n                        }\n                    }).catch(error => {\n                    console.log(error)\n                    console.log('ups')\n                    callback()\n                })\n            }, 1000)\n        }\n\n        const downloadFun = function () {\n            client.post(`/downloadVideo/${userUUID}`, null, {\n                responseType: 'blob',\n            }).then(response => {\n                if (response.data.type === 'text/html') {\n                    console.log('not found')\n                    console.log('nie dziala')\n                    callback()\n                } else {\n                    console.log('found')\n                    console.log(response)\n                    console.log(response.data)\n                    const file = new File([response.data], filename)\n                    saveAs(file)\n                    callback()\n                }\n            }).catch(error => {\n                console.log(error)\n                callback()\n            })\n        }\n        recFun()\n    },\n}\n"]}]}