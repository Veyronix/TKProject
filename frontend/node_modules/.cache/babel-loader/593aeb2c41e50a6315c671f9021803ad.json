{"remainingRequest":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/thread-loader/dist/cjs.js!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/WatermarkView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/src/views/WatermarkView.vue","mtime":1591255506075},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/test/new_repo/TKProject/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.fill\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport service from '@/rest/service';\nexport default {\n  name: 'ConverterView',\n  data: function data() {\n    return {\n      name: '',\n      files: null,\n      alert: false,\n      image: null,\n      percent: 0,\n      uploading: false,\n      selected_op: '0.5',\n      op: Array(10).fill().map(function (_, idx) {\n        return (0.1 + idx / 10).toFixed(1);\n      }),\n      showInfo: false,\n      button_is_enabled: false,\n      selected_position: 'Top left',\n      text_position: ['Top left', 'Top right', 'Bottom left', 'Bottom right']\n    };\n  },\n  computed: {\n    formData: function formData() {\n      var data = new FormData();\n      var video = this.files[0];\n      var image = this.image[0];\n      data.append('image', image, image.name);\n      data.append('video', video, video.name);\n      return data;\n    }\n  },\n  methods: {\n    importVideo: function importVideo() {\n      this.uploading = true;\n      console.log(this.files);\n      var filename = this.files[0].name;\n      var that = this;\n      service.putWatermark(this.formData, this.getOperations()).then(function (response) {\n        console.log('convert response');\n        console.log(response);\n        console.log(response.data.uuid);\n        service.downloadRec(response.data.uuid, filename, function (value) {\n          that.percent = value;\n        }, function () {\n          if (that.percent !== 100) {\n            that.alert = true;\n          }\n\n          that.uploading = false;\n          that.percent = 0;\n        });\n      }).catch(function (error) {\n        that.uploading = false;\n        that.percent = 0;\n        that.alert = true;\n        console.log(error);\n      });\n    },\n    getOperations: function getOperations() {\n      var operations = '';\n      operations += 'position,' + this.selected_position;\n      operations += ',';\n      operations += 'opacity,' + this.selected_op;\n      console.log(operations);\n      return operations;\n    },\n    validate_button: function validate_button() {\n      this.button_is_enabled = !!this.files && this.files.length === 1 && !!this.image && this.image.length === 1;\n    }\n  }\n};",{"version":3,"sources":["WatermarkView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA,OAAA,OAAA,MAAA,gBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA,IAJA;AAKA,MAAA,OAAA,EAAA,CALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA,KAPA;AAQA,MAAA,EAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,IAAA,GAAA,GAAA,CAAA,UAAA,CAAA,EAAA,GAAA;AAAA,eAAA,CAAA,MAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CARA;AASA,MAAA,QAAA,EAAA,KATA;AAUA,MAAA,iBAAA,EAAA,KAVA;AAWA,MAAA,iBAAA,EAAA,UAXA;AAYA,MAAA,aAAA,EAAA,CACA,UADA,EAEA,WAFA,EAGA,aAHA,EAIA,cAJA;AAZA,KAAA;AAmBA,GAtBA;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAA,KAAA,CAAA,IAAA;AACA,MAAA,IAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAA,KAAA,CAAA,IAAA;AACA,aAAA,IAAA;AACA;AARA,GAvBA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,EAAA,IAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,KAAA,QAAA,EAAA,KAAA,aAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,UAAA,KAAA,EAAA;AAAA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AAAA,SAAA,EAAA,YAAA;AACA,cAAA,IAAA,CAAA,OAAA,KAAA,GAAA,EAAA;AACA,YAAA,IAAA,CAAA,KAAA,GAAA,IAAA;AACA;;AACA,UAAA,IAAA,CAAA,SAAA,GAAA,KAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,CAAA;AACA,SANA;AAOA,OAZA,EAaA,KAbA,CAaA,UAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,IAAA,CAAA,OAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,KAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAlBA;AAmBA,KAzBA;AA0BA,IAAA,aA1BA,2BA0BA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,MAAA,UAAA,IAAA,cAAA,KAAA,iBAAA;AACA,MAAA,UAAA,IAAA,GAAA;AACA,MAAA,UAAA,IAAA,aAAA,KAAA,WAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA,aAAA,UAAA;AACA,KAjCA;AAkCA,IAAA,eAlCA,6BAkCA;AACA,WAAA,iBAAA,GAAA,CAAA,CAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,MAAA,KAAA,CAAA;AACA;AApCA;AAjCA,CAAA","sourcesContent":["<template>\n  <v-card-text>\n    <v-card-title>\n      Choose video\n    </v-card-title>\n    <v-file-input\n      v-model=\"files\"\n      accept=\".avi,.mp4\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Choose video file\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      :rules=\"[validate_button]\"\n    />\n    <v-divider class=\"mx-4 mb-4\" />\n    <p class=\"text-left\">\n      Choose image\n    </p>\n    <v-file-input\n      v-model=\"image\"\n      accept=\"image/*\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Choose image file\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      :rules=\"[validate_button]\"\n    />\n    <v-divider class=\"mx-4 mb-4\" />\n    <p class=\"text-left\">\n      Watermark position\n    </p>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n      >\n        <v-autocomplete\n          v-model=\"selected_position\"\n          class=\"pl-8\"\n          :items=\"text_position\"\n          label=\"Select position\"\n          outlined\n        />\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n      >\n        <v-select\n          v-model=\"selected_op\"\n          :items=\"op\"\n          menu-props=\"auto\"\n          label=\"Select opacity\"\n          outlined\n        />\n      </v-col>\n    </v-row>\n    <v-alert\n      v-model=\"alert\"\n      type=\"error\"\n      dismissible\n    >\n      Error! Something went wrong. Try again.\n    </v-alert>\n    <v-btn\n      big\n      color=\"primary\"\n      :loading=\"uploading\"\n      :disabled=\"!button_is_enabled\"\n      @click=\"importVideo\"\n    >\n      Convert video\n    </v-btn>\n    <v-progress-linear\n      v-model=\"percent\"\n      class=\"mt-4\"\n      color=\"light-blue\"\n      height=\"30\"\n      :active=\"uploading\"\n      striped\n    />\n  </v-card-text>\n</template>\n\n<script>\n  import service from '@/rest/service'\n  export default {\n    name: 'ConverterView',\n    data () {\n      return {\n        name: '',\n        files: null,\n        alert: false,\n        image: null,\n        percent: 0,\n        uploading: false,\n        selected_op: '0.5',\n        op: Array(10).fill().map((_, idx) => (0.1 + idx / 10).toFixed(1)),\n        showInfo: false,\n        button_is_enabled: false,\n        selected_position: 'Top left',\n        text_position: [\n          'Top left',\n          'Top right',\n          'Bottom left',\n          'Bottom right',\n        ],\n      }\n    },\n    computed: {\n      formData () {\n        const data = new FormData()\n        const video = this.files[0]\n        const image = this.image[0]\n        data.append('image', image, image.name)\n        data.append('video', video, video.name)\n        return data\n      },\n    },\n    methods: {\n      importVideo () {\n        this.uploading = true\n        console.log(this.files)\n        const filename = this.files[0].name\n        const that = this\n        service.putWatermark(this.formData, this.getOperations())\n          .then(response => {\n            console.log('convert response')\n            console.log(response)\n            console.log(response.data.uuid)\n            service.downloadRec(response.data.uuid, filename, function (value) { that.percent = value }, function () {\n              if (that.percent !== 100) {\n                that.alert = true\n              }\n              that.uploading = false\n              that.percent = 0\n            })\n          })\n          .catch(error => {\n            that.uploading = false\n            that.percent = 0\n            that.alert = true\n            console.log(error)\n          })\n      },\n      getOperations () {\n        let operations = ''\n        operations += 'position,' + this.selected_position\n        operations += ','\n        operations += 'opacity,' + this.selected_op\n        console.log(operations)\n        return operations\n      },\n      validate_button () {\n        this.button_is_enabled = (!!this.files && this.files.length === 1) && (!!this.image && this.image.length === 1)\n      },\n    },\n  }\n</script>\n\n<style scoped>\n    p {\n        font-size: 20px;\n        padding-left: 20px;\n    }\n</style>\n"],"sourceRoot":"src/views"}]}