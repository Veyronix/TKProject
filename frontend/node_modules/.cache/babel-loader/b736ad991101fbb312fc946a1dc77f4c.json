{"remainingRequest":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/babel-loader/lib/index.js!/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/bartek/Desktop/komponenty/projekt/frontend/src/rest/rabbit.js","dependencies":[{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/src/rest/rabbit.js","mtime":1589655724041},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import amqplib from 'amqplib';\nexport default {\n  sendMsg: function sendMsg() {\n    // var amqp = require('amqplib/callback_api')\n    console.log('siemka'); // console.log(amqp)\n\n    amqplib.connect('amqp://user:bitnami@localhost', function (error0, connection) {\n      console.log('siemka');\n\n      if (error0) {\n        throw error0;\n      }\n\n      connection.createChannel(function (error1, channel) {\n        if (error1) {\n          throw error1;\n        }\n\n        var queue = 'backend';\n        var msg = 'Hello World!';\n        channel.assertQueue(queue, {\n          durable: false\n        });\n        channel.sendToQueue(queue, Buffer.from(msg));\n        console.log(' [x] Sent %s', msg);\n      });\n      setTimeout(function () {\n        connection.close();\n        process.exit(0);\n      }, 500);\n    });\n  }\n};",{"version":3,"sources":["/home/bartek/Desktop/komponenty/projekt/frontend/src/rest/rabbit.js"],"names":["amqplib","sendMsg","console","log","connect","error0","connection","createChannel","error1","channel","queue","msg","assertQueue","durable","sendToQueue","Buffer","from","setTimeout","close","process","exit"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,eAAe;AACXC,EAAAA,OADW,qBACA;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFO,CAGP;;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgB,+BAAhB,EAAiD,UAAUC,MAAV,EAAkBC,UAAlB,EAA8B;AAC3EJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAIE,MAAJ,EAAY;AACR,cAAMA,MAAN;AACH;;AACDC,MAAAA,UAAU,CAACC,aAAX,CAAyB,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAChD,YAAID,MAAJ,EAAY;AACR,gBAAMA,MAAN;AACH;;AAED,YAAIE,KAAK,GAAG,SAAZ;AACA,YAAIC,GAAG,GAAG,cAAV;AAEAF,QAAAA,OAAO,CAACG,WAAR,CAAoBF,KAApB,EAA2B;AACvBG,UAAAA,OAAO,EAAE;AADc,SAA3B;AAGAJ,QAAAA,OAAO,CAACK,WAAR,CAAoBJ,KAApB,EAA2BK,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAA3B;AAEAT,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,GAA5B;AACH,OAdD;AAeAM,MAAAA,UAAU,CAAC,YAAY;AACnBX,QAAAA,UAAU,CAACY,KAAX;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH,OAHS,EAGP,GAHO,CAAV;AAIH,KAxBD;AAyBH;AA9BU,CAAf","sourcesContent":["import amqplib from 'amqplib'\n\nexport default {\n    sendMsg () {\n        // var amqp = require('amqplib/callback_api')\n        console.log('siemka')\n        // console.log(amqp)\n        amqplib.connect('amqp://user:bitnami@localhost', function (error0, connection) {\n            console.log('siemka')\n            if (error0) {\n                throw error0\n            }\n            connection.createChannel(function (error1, channel) {\n                if (error1) {\n                    throw error1\n                }\n\n                var queue = 'backend'\n                var msg = 'Hello World!'\n\n                channel.assertQueue(queue, {\n                    durable: false,\n                })\n                channel.sendToQueue(queue, Buffer.from(msg))\n\n                console.log(' [x] Sent %s', msg)\n            })\n            setTimeout(function () {\n                connection.close()\n                process.exit(0)\n            }, 500)\n        })\n    },\n}\n"]}]}