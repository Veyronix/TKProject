{"remainingRequest":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/thread-loader/dist/cjs.js!/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/babel-loader/lib/index.js!/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bartek/Desktop/komponenty/projekt/frontend/src/views/ConverterView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/src/views/ConverterView.vue","mtime":1589719011521},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bartek/Desktop/komponenty/projekt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport service from '@/rest/service';\nexport default {\n  name: 'ConverterView',\n  data: function data() {\n    return {\n      name: '',\n      files: null,\n      uploading: false,\n      newFormat: 'Avi',\n      showInfo: false\n    };\n  },\n  computed: {\n    formData: function formData() {\n      var data = new FormData();\n      var file = this.files[0];\n      data.append('data', file, file.name);\n      return data;\n    }\n  },\n  methods: {\n    importVideo: function importVideo() {\n      this.uploading = true;\n      console.log(this.files);\n      var filename = this.files[0].name.split('.')[0] + '.' + this.newFormat;\n      var that = this;\n      service.convertVideo(this.newFormat, this.formData).then(function (response) {\n        console.log('convert response');\n        console.log(response);\n        console.log(response.data.uuid);\n        service.downloadRec(response.data.uuid, filename, function () {\n          that.uploading = false;\n        });\n      }).catch(function (error) {\n        that.uploading = false;\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["ConverterView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,OAAA,OAAA,MAAA,gBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA,aAAA,IAAA;AACA;AANA,GAXA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,GAAA,GAAA,KAAA,SAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,KAAA,SAAA,EAAA,KAAA,QAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,YAAA;AACA,UAAA,IAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAFA;AAGA,OARA,EASA,KATA,CASA,UAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAZA;AAaA;AAnBA;AAnBA,CAAA","sourcesContent":["<template>\n  <v-card-text>\n    <v-card-title>\n      Convert\n    </v-card-title>\n    <v-file-input\n      v-model=\"files\"\n      :multiple=\"false\"\n      :show-size=\"1024\"\n      placeholder=\"Wybierz plik\"\n      prepend-icon=\"mdi-paperclip\"\n      outlined\n      @input=\"$v.files.$touch()\"\n    >\n      <v-btn small>\n        Normal\n      </v-btn>\n    </v-file-input>\n    <p class=\"text-left\">\n      Convert to\n    </p>\n    <v-row>\n      <v-container fluid>\n        <v-radio-group\n          v-model=\"newFormat\"\n          :mandatory=\"true\"\n          row\n        >\n          <v-radio\n            label=\"avi\"\n            value=\"avi\"\n          />\n          <v-radio\n            label=\"mp4\"\n            value=\"mp4\"\n          />\n        </v-radio-group>\n      </v-container>\n    </v-row>\n    <v-btn\n      small\n      :loading=\"uploading\"\n      @click=\"importVideo\"\n    >\n      Convert video\n    </v-btn>\n  </v-card-text>\n</template>\n\n<script>\n  import service from '@/rest/service'\n  export default {\n    name: 'ConverterView',\n    data () {\n      return {\n        name: '',\n        files: null,\n        uploading: false,\n        newFormat: 'Avi',\n        showInfo: false,\n      }\n    },\n    computed: {\n      formData () {\n        const data = new FormData()\n        const file = this.files[0]\n        data.append('data', file, file.name)\n        return data\n      },\n    },\n    methods: {\n      importVideo () {\n        this.uploading = true\n        console.log(this.files)\n        const filename = this.files[0].name.split('.')[0] + '.' + this.newFormat\n        const that = this\n        service.convertVideo(this.newFormat, this.formData)\n          .then(response => {\n            console.log('convert response')\n            console.log(response)\n            console.log(response.data.uuid)\n            service.downloadRec(response.data.uuid, filename, function () {\n              that.uploading = false\n            })\n          })\n          .catch(error => {\n            that.uploading = false\n            console.log(error)\n          })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views"}]}